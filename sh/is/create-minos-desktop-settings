#!/bin/sh
#create default minos desktop settings
#usage: create-minos-default-desktop-setting

#example create-minos-default-desktop-setting
#a ${1}/ directory is generated with desktop minos settings

trap _cleanup 15 #trap ctrl-c
#trap _cleanup SIGINT SIGTERM #trap ctrl-c

file_header="This file is part of the minos-desktop-settings package"
total_errors="0"

_usage() {
    printf "%b\\n" "Usage: $(expr "${0}" : '.*/\([^/]*\)') [directory]"
    printf "%b\\n" "minos desktop settings creator."
    printf "\\n"
    printf "%s\\n" "  -h, --help   show this help message and exit"
}

_cmd() {
    [ -z "${1}" ] && return 0

    printf "%s " "[$] ${@}"
    printf "\\n"
    eval "${@}"

    _cmd__status="${?}"
    [ X"${_cmd__status}" != X"0" ] && exit "${_cmd__status}" || return
}

_cleanup() {
    stty echo
    printf "\\n"
    printf "%s\\n" "[+] cleanup ..."
    _cmd rm -rf "${target_directory}"

    [ -z ${1} ] && exit
}

_file_or_directory_exist() {
    [ -z "${1}" ] && return 1
    [ -f "${1}" ] && return 0
    [ -d "${1}" ] && return 0
    printf "\\n%s\\n" "WARNING: ${1} doesn't exists, skipping ..." >&2
    total_errors="$((total_errors + 1))"
    return 1
}

_create_minos_default_desktop_settings() {
    #$1 => target directory
    [ -z "${1}" ] && return 1

    [ -d "${1}" ] && _cmd rm -rf "${1}"
    _cmd mkdir -p "${1}"

    if _file_or_directory_exist ~/.minos/autostart; then
        echo
        _cmd "printf \"%s\\n%s\\n\" \"#!/bin/sh\" \"#${file_header}\" > \"${1}\"/etc##minos##autostart"
        _cmd "tail -n+2 ~/.minos/autostart >> ${1}/etc##minos##autostart"
        _cmd "chmod +x ${1}/etc##minos##autostart"
    fi

    if _file_or_directory_exist ~/.minos/config; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/etc##minos##config"
        _cmd "cat ~/.minos/config >> ${1}/etc##minos##config"
        _cmd "sed -i '/HOME/d' ${1}/etc##minos##config"
        _cmd "sed -i '/connman/d' ${1}/etc##minos##config"
        _cmd "sed -i '/^m-battery-config/d' ${1}/etc##minos##config"
        _cmd "sed -i 's:^#m-battery-config:m-battery-config:' ${1}/etc##minos##config"
        _cmd "sed -i 's:^#wallpaper:wallpaper:' ${1}/etc##minos##config"
        _cmd "sed -i 's:^#lock-wallpaper:lock-wallpaper:' ${1}/etc##minos##config"
    fi

    if _file_or_directory_exist ~/.minos/help; then
        echo
        _cmd cp ~/.minos/help "${1}"/etc##minos##help
    fi

    if _file_or_directory_exist ~/.minos/session-manager; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/etc##minos##session-manager"
        _cmd "cat ~/.minos/session-manager >> ${1}/etc##minos##session-manager"
    fi

    if _file_or_directory_exist ~/.minos/statusbar; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/etc##minos##statusbar"
        _cmd "cat ~/.minos/statusbar >> ${1}/etc##minos##statusbar"
        _cmd "sed -i 's:\$HOME/.data/images/icons/dzen2:/usr/share/minos/bitmaps:' ${1}/etc##minos##statusbar"
    fi

    if _file_or_directory_exist ~/.i3status.conf; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/etc##minos##i3status.conf"
        _cmd "cat ~/.i3status.conf >> ${1}/etc##minos##i3status.conf"
    fi

    if _file_or_directory_exist ~/.local/share/applications/defaults.list; then
        echo
        _cmd cp ~/.local/share/applications/defaults.list "${1}"/usr##share##minos##applications##defaults.list
    fi

    if _file_or_directory_exist ~/.local/share/applications/mimeapps.list; then
        echo
        _cmd cp ~/.local/share/applications/mimeapps.list "${1}"/usr##share##minos##applications##mimeapps.list
    fi

    if _file_or_directory_exist ~/.Xdefaults; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/usr##share##minos##Xdefaults"
        _cmd "cat ~/.Xdefaults >> ${1}/usr##share##minos##Xdefaults"
    fi

    if _file_or_directory_exist ~/.xsession; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/usr##share##minos##xsession"
        _cmd "cat ~/.xsession >> ${1}/usr##share##minos##xsession"
    fi

    if _file_or_directory_exist ~/.config/libfm/; then
        echo
        _cmd cp -r ~/.config/libfm/ "${1}"/usr##share##minos##config##libfm/
    fi

    if _file_or_directory_exist ~/.config/pcmanfm/; then
        echo
        _cmd cp -r ~/.config/pcmanfm/ "${1}"/usr##share##minos##config##pcmanfm/
    fi

    if _file_or_directory_exist ~/.config/Trolltech.conf; then
        echo
        _cmd cp -r ~/.config/Trolltech.conf "${1}"/usr##share##minos##config##Trolltech.conf
    fi

    if _file_or_directory_exist ~/.config/redshift.conf; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/usr##share##minos##config##redshift.conf"
        _cmd "cat ~/.config/redshift.conf >> ${1}/usr##share##minos##config##redshift.conf"
    fi

    if _file_or_directory_exist ~/.config/user-dirs.dirs; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/usr##share##minos##config##user-dirs.dirs"
        _cmd "cat ~/.config/user-dirs.dirs >> ${1}/usr##share##minos##config##user-dirs.dirs"
    fi

    if _file_or_directory_exist ~/.i3/config; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/usr##share##minos##i3##config"
        _cmd "cat ~/.i3/config >> ${1}/usr##share##minos##i3##config"
        _cmd "sed -i 's:dmenu-countdown.*:dmenu-countdown:' ${1}/usr##share##minos##i3##config"
    fi

    if _file_or_directory_exist ~/.irssi/; then
        echo
        _cmd cp -r ~/.irssi/ "${1}"/usr##share##minos##irssi
        _cmd rm -rf "${1}"/usr##share##minos##irssi/*gpg
        _cmd rm -rf "${1}"/usr##share##minos##irssi/*.log
        _cmd rm -rf "${1}"/usr##share##minos##irssi/autobleh*
    fi

    if _file_or_directory_exist ~/.mplayer/config; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/usr##share##minos##mplayer##config"
        _cmd "cat ~/.mplayer/config >> ${1}/usr##share##minos##mplayer##config"
    fi

    if _file_or_directory_exist ~/.mutt/muttrc; then
        echo
        _cmd mkdir "${1}"/usr##share##minos##mutt
        _cmd cp -r ~/.mutt/accounts "${1}"/usr##share##minos##mutt/
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/usr##share##minos##mutt/muttrc"
        _cmd "cat ~/.mutt/muttrc >> ${1}/usr##share##minos##mutt/muttrc"
        _cmd rm -rf ${1}/usr##share##minos##mutt/cache
        _cmd rm -rf ${1}/usr##share##minos##mutt/certificates
        _cmd mv     ${1}/usr##share##minos##mutt/accounts/f* ${1}/usr##share##minos##mutt/accounts/1st_account@domain.tld
        _cmd mv     ${1}/usr##share##minos##mutt/accounts/c* ${1}/usr##share##minos##mutt/accounts/2nd_account@domain.tld
        _cmd "sed -i 's:alternates.*:alternates \"alt_1@domain.tld|alt_2@domain.tld\":' ${1}/usr##share##minos##mutt/accounts/1st_account@domain.tld/account"
        _cmd "sed -i 's:set from.*:set from             = \"Joe Foobar <1st_account@domain.tld>\":' ${1}/usr##share##minos##mutt/accounts/1st_account@domain.tld/account"
        _cmd "sed -i 's:fc.*@.*mail.com:1st_account@domain.tld:'   ${1}/usr##share##minos##mutt/accounts/1st_account@domain.tld/account"
        _cmd "sed -i 's,imap\..*:,imap.domain.tld:,'               ${1}/usr##share##minos##mutt/accounts/1st_account@domain.tld/account"
        _cmd "sed -i 's,imap\..*/\[,imap.domain.tld/\[,'           ${1}/usr##share##minos##mutt/accounts/1st_account@domain.tld/account"
        _cmd "sed -i 's,smtp:.*:,smtp://1st_account@smtp.domain.ltd:,' ${1}/usr##share##minos##mutt/accounts/1st_account@domain.tld/account"
        _cmd "sed -i 's,my_.*,my_1st_accountATdomainDOTltd,'       ${1}/usr##share##minos##mutt/accounts/1st_account@domain.tld/account"
        _cmd "sed -i '/^set status_format/d'                       ${1}/usr##share##minos##mutt/accounts/1st_account@domain.tld/account"
        _cmd "sed -i 's:^#set status_format:set status_format:'    ${1}/usr##share##minos##mutt/accounts/1st_account@domain.tld/account"

        _cmd "sed -i 's:set from.*:set from             = \"Joe Foobar <2nd_account@domain.tld>\":' ${1}/usr##share##minos##mutt/accounts/2nd_account@domain.tld/account"
        _cmd "sed -i 's:chi.*@.*mail.com:2nd_account@domain.tld:'  ${1}/usr##share##minos##mutt/accounts/2nd_account@domain.tld/account"
        _cmd "sed -i 's,imap\..*:,imap.domain.tld:,'               ${1}/usr##share##minos##mutt/accounts/2nd_account@domain.tld/account"
        _cmd "sed -i 's,imap\..*/\[,imap.domain.tld/\[,'           ${1}/usr##share##minos##mutt/accounts/2nd_account@domain.tld/account"
        _cmd "sed -i 's,smtp:.*:,smtp://2nd_account@smtp.domain.ltd:,' ${1}/usr##share##minos##mutt/accounts/2nd_account@domain.tld/account"
        _cmd "sed -i 's,my_.*,my_2nd_accountATdomainDOTltd,'       ${1}/usr##share##minos##mutt/accounts/2nd_account@domain.tld/account"

        _cmd "sed -i 's,my_fc.*=,my_1st_accountATdomainDOTltd=,'   ${1}/usr##share##minos##mutt/muttrc"
        _cmd "sed -i 's,my_chi.*=,my_2nd_accountATdomainDOTltd=,'  ${1}/usr##share##minos##mutt/muttrc"
        _cmd "sed -i 's:fc.*@.*mail.com:1st_account@domain.tld:'   ${1}/usr##share##minos##mutt/muttrc"
        _cmd "sed -i 's:chi.*@.*mail.com:2nd_account@domain.tld:'  ${1}/usr##share##minos##mutt/muttrc"
        _cmd "printf \"%s\\n%s\" \"1st_account@domain.tld: passwd\" \"2nd_account@domain.tld: passwd\" > \"${1}\"/usr##share##minos##mutt/accounts/passwd.gpg"
    fi

    if _file_or_directory_exist ~/.ncmpcpp/config; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/usr##share##minos##ncmpcpp##config"
        _cmd "cat ~/.ncmpcpp/config >> ${1}/usr##share##minos##ncmpcpp##config"
    fi

    if _file_or_directory_exist ~/.urxvt/; then
        echo
        _cmd cp -r ~/.urxvt/ ${1}/usr##share##minos##urxvt
        _cmd rm -rf          ${1}/usr##share##minos##urxvt/urxvtd*
    fi

    if _file_or_directory_exist ~/.compton.conf; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/usr##share##minos##compton.conf"
        _cmd "cat ~/.compton.conf >> ${1}/usr##share##minos##compton.conf"
    fi

    if _file_or_directory_exist ~/.slim.conf; then
        echo
        _cmd "printf \"%s\\n\\n\" \"#${file_header}\" > \"${1}\"/etc##slim.conf"
        _cmd "cat ~/.slim.conf                        >>    ${1}/etc##slim.conf"
        _cmd "sed -i 's:$(whoami):muser:g'                  ${1}/etc##slim.conf"
    fi

    printf "\\n%s\\n" "[+] New minos desktop settings generated at: ${1}/"
    [ "${total_errors}" -gt "0" ] && printf "%s\\n" "[-] "${total_errors}" errors were found, see above to find more details" && return 1 || :

    cat > minos-desktop-settings/README.md << 'E=O=F'
## About

This repository contain default desktop minos settings, some of the changes affect:

- Skel default files:
 - `.Xdefault`: default theme and urxvt options
 - `.xsession`: i3 session
 - `.config/redshift.conf`: redshift template
 - `.config/Trolltech.conf`: default qt theme
 - `.config/user-dirs.dirs`: stop autocreation of ~/Video, ~/Audio, etc folders

- Application settings:
 - `git`: default theme plus aliases
 - `i3`: default theme, shortcuts, statusbar, etc
 - `compton`: performance oriented settings
 - `mplayer`: fifo controller
 - `ncmpcpp`: default theme
 - `pcmanfm`: default settings
 - `irssi`: default theme
 - `mutt`: multiple account email settings template
 - `urxvt`: common plugins and default theme

## Quick start

### On Ubuntu (only LTS releases)

1. Set up the minos archive:

   ```
   $ sudo add-apt-repository ppa:minos-archive/main
   ```

2. Install:

   ```
   $ sudo apt-get update && sudo apt-get install minos-desktop-settings
   ```

3. Enjoy ☺!

## Feedback

Please drop me an [email](mailto:m@javier.io) with your suggestions or open [an issue](https://github.com/minos-org/bash-minos-settings/issues) with your comments.
E=O=F
}

for arg; do #parse options
    case "${arg}" in
        -h|--help) _usage && exit ;;
        -*) printf "%s\\n" "$(expr "${0}" : '.*/\([^/]*\)'): unrecognized option '${arg}'" >&2
            _usage >&2; exit 1 ;;
        *) target_directory="${arg}"
    esac
done; target_directory="${target_directory:-minos-desktop-settings}"

_create_minos_default_desktop_settings "${target_directory}"
